---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/cilium.io/ciliumloadbalancerippool_v2alpha1.json
apiVersion: cilium.io/v2alpha1
kind: CiliumLoadBalancerIPPool
metadata:
  name: pool
spec:
  # allowFirstLastIPs: "No"
  blocks:
    - cidr: 10.0.10.0/24
    # - cidr: ::ffff:192.168.42.0/112 # IPv4-mapped IPv6
# ---
# # yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/cilium.io/ciliuml2announcementpolicy_v2alpha1.json
# apiVersion: cilium.io/v2alpha1
# kind: CiliumL2AnnouncementPolicy
# metadata:
#   name: l2-policy
# spec:
#   loadBalancerIPs: true
#   interfaces: ["^enp.*"]
#   nodeSelector:
#     matchLabels:
#       kubernetes.io/os: linux
---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/cilium.io/ciliumbgppeeringpolicy_v2alpha1.json
# apiVersion: cilium.io/v2alpha1
# kind: CiliumBGPPeeringPolicy
# metadata:
#   name: l3-policy
# spec:
#   nodeSelector:
#     matchLabels:
#       kubernetes.io/os: linux
#   virtualRouters:
#     - localASN: 65512
#       exportPodCIDR: false
#       serviceSelector:
#         matchExpressions:
#           - key: thisFakeSelector
#             operator: NotIn
#             values:
#               - will-match-and-announce-all-services
#       neighbors:
#         - peerAddress: 192.168.86.1/24
#           peerASN: 65510
apiVersion: cilium.io/v2alpha1
kind: CiliumBGPPeeringPolicy
metadata:
  name: custom-policy
spec:
  virtualRouters:
    - exportPodCIDR: false
      localASN: 65512
      neighbors:
        - connectRetryTimeSeconds: 120
          eBGPMultihopTTL: 1
          holdTimeSeconds: 90
          keepAliveTimeSeconds: 30
          peerASN: 65510
          peerAddress: 192.168.86.1/24
          peerPort: 179
      serviceSelector:
        matchExpressions:
          - { key: somekey, operator: NotIn, values: ["never-used-value"] }
---
apiVersion: v1
kind: Service
metadata:
  name: kube-api
  annotations:
    lbipam.cilium.io/ips: 10.0.10.100 #::ffff:192.168.42.120
spec:
  type: LoadBalancer
  externalTrafficPolicy: Cluster
  selector:
    k8s-app: kube-apiserver
    tier: control-plane
  ports:
    - name: https
      port: 6443
      protocol: TCP
      targetPort: 6443
